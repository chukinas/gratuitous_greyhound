<%# assigns match PlayerTurn struct %>
<%# Maneuver Squares %>
<div
  id="arenaGrid"
  class="absolute inset-0 grid"
  style="
    grid-auto-columns: <%= @player_turn.grid.square_size %>px;
    grid-auto-rows: <%= @player_turn.grid.square_size %>px;
  "
>
  <%= if @player_turn.player_actions.current_mode == :maneuver do %>
  <%= for square <- @player_turn.cmd_squares do %>
  <%= if square.unit_id == @player_turn.player_actions.current_unit_id do %>
  <%= ChukinasWeb.DreadnoughtView.render "maneuver_square.html", 
    myself: @myself, 
    square: square %>
  <% end %>
  <% end %>
  <% end %>
</div>


<%# Unit Maneuvers %>
<svg
  id="svg_paths"
  class="absolute opacity-20 inset-0"
  viewBox="0 0 <%= @player_turn.grid.width %> <%= @player_turn.grid.height %> "
>
  <%= for unit <- @player_turn.units do %>
    <%= for maybe_maneuver_path <- unit.events do %>
      <%= ChukinasWeb.DreadnoughtView.maneuver_path(maybe_maneuver_path, unit.id) %>
    <% end %>
  <% end %>
</svg>


<%# Maneuver Actions %>
<%= for action <- @player_turn.player_actions.actions do %>
<%= if action.mode == :maneuver and action.value != :exit_or_run_aground do %>
<%= ChukinasWeb.DreadnoughtView.render "maneuver_location.html", position: action.value %>
<% end %>
<% end %>


<%# Units and their selection boxes %>
<%= for unit <- @player_turn.units do %>
  <%= if unit.id in @player_turn.player_actions.current_target_unit_ids do %>
    <%= ChukinasWeb.DreadnoughtView.unit_selection_box(@myself, unit)%>
  <% end %>
  <%= if unit.status.render? do %>
    <%= ChukinasWeb.DreadnoughtView.render "unit.html",
      socket: @socket,
      turn_number: @turn_number,
      unit: unit %>
  <% end %>
<% end %>

<%= render("animations.html", socket: @socket, animations: @player_turn.gunfire) %>

<%# End Turn Button %>
<div class="absolute pointer-events-auto text-9xl text-white font-bold top-0 left-0" >
  <%= @turn_number %>
  <%= if @player_turn.show_end_turn_btn? do %>
  <%= ChukinasWeb.Components.button(
      "End Turn", 
      id: "dynWorldCompCompleteTurnBtn",
      "phx-target": @myself, 
      "phx-click": "end_turn"
      )%>
  <% end %>
</div>


<div id="turn-number" data-turn-number="<%= @turn_number %>" phx-hook="TurnNumber"></div>
